# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY {
#   globalAuthRule: AuthRule = { allow: public }
# } # FOR TESTING ONLY!
type DropStackNum {
  num: Int!
  stack: Int
}

type DropObject {
  objectName: String!
  drops: [DropStackNum!]!
}

type Report
  @model
  @auth(
    rules: [
      {
        allow: owner
        provider: userPools
        ownerField: "owner"
        operations: [create, read, update, delete]
      }
      {
        allow: groups
        provider: userPools
        groups: ["Admin"]
        operations: [create, read, update, delete]
      }
      { allow: private, provider: userPools, operations: [create, read] }
      { allow: public, operations: [create, read] }
    ]
  ) {
  id: ID!
  owner: String
    @auth(
      rules: [
        { allow: owner, operations: [read, delete] }
        {
          allow: groups
          provider: userPools
          groups: ["Admin"]
          operations: [read, update, delete]
        }
        { allow: private, provider: userPools, operations: [read] }
        { allow: public, operations: [read] }
      ]
    )
  name: String
  twitterId: String
  twitterName: String
  twitterUsername: String
  type: String!
    @index(
      name: "SortByTimestamp"
      sortKeyFields: ["timestamp"]
      queryField: "listReportsSortedByTimestamp"
    )
  warName: String
  questName: String!
  questType: String!
  timestamp: Int!
  runs: Int!
  note: String
  dropObjects: [DropObject!]!
}

type UserInfo {
  name: String
  # twitterId: String
  # twitterName: String
  # twitterUsername: String
}

type Query {
  getUserInfo(username: String!): String
    @function(name: "getUserInfo-${env}")
    @auth(rules: [{ allow: private, provider: userPools }, { allow: public }])
}
